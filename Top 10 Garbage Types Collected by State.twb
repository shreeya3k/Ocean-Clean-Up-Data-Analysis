<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0119.2058                               -->
<workbook original-version='18.1' source-build='2019.4.2 (20194.20.0119.2058)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Top10GarbageTypesCollectedbyState' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Popular_Garbage_By_State' inline='true' name='federated.0p5ovbv0f3nlfk0zk31wo1xs15cd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Popular_Garbage_By_State' name='textscan.07mbqcc1mn0x2n1a1bmr31u0qzfj'>
            <connection class='textscan' directory='/Users/Sarah/Downloads/Level5_BAH_OceanCleanup' filename='Popular_Garbage_By_State.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07mbqcc1mn0x2n1a1bmr31u0qzfj' name='Popular_Garbage_By_State.csv' table='[Popular_Garbage_By_State#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='#1 Garbage Type' ordinal='2' />
            <column datatype='integer' name='Total' ordinal='3' />
            <column datatype='string' name='#2 Garbage Type' ordinal='4' />
            <column datatype='integer' name='Total 1' ordinal='5' />
            <column datatype='string' name='#3 Garbage Type' ordinal='6' />
            <column datatype='integer' name='Total 2' ordinal='7' />
            <column datatype='string' name='#4 Garbage Type' ordinal='8' />
            <column datatype='integer' name='Total 3' ordinal='9' />
            <column datatype='string' name='#5 Garbage Type' ordinal='10' />
            <column datatype='integer' name='Total 4' ordinal='11' />
            <column datatype='string' name='#6 Garbage Type' ordinal='12' />
            <column datatype='integer' name='Total 5' ordinal='13' />
            <column datatype='string' name='#7 Garbage Type' ordinal='14' />
            <column datatype='integer' name='Total 6' ordinal='15' />
            <column datatype='string' name='#8 Garbage Type' ordinal='16' />
            <column datatype='integer' name='Total 7' ordinal='17' />
            <column datatype='string' name='#9 Garbage Type' ordinal='18' />
            <column datatype='integer' name='Total 8' ordinal='19' />
            <column datatype='string' name='#10 Garbage Type' ordinal='20' />
            <column datatype='integer' name='Total 9' ordinal='21' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#1 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#1 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#1 Garbage Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#2 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#2 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#2 Garbage Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 1]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#3 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#3 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#3 Garbage Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 2]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#4 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#4 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#4 Garbage Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 3]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 3</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#5 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#5 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#5 Garbage Type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 4]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#6 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#6 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#6 Garbage Type</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 5]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 5</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#7 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#7 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#7 Garbage Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 6]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 6</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#8 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#8 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#8 Garbage Type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 7]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 7</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#9 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#9 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#9 Garbage Type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 8]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 8</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#10 Garbage Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#10 Garbage Type]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>#10 Garbage Type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total 9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total 9]</local-name>
            <parent-name>[Popular_Garbage_By_State.csv]</parent-name>
            <remote-alias>Total 9</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/Sarah/Documents/My Tableau Repository/Datasources/Popular_Garbage_By_State.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/27/2020 03:28:39 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Popular_Garbage_By_State' increment-value='%null%' refresh-type='create' rows-inserted='54' timestamp-start='2020-06-27 15:28:39.194' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>1</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#1 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#1 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#1 Garbage Type</remote-alias>
              <ordinal>2</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total</remote-alias>
              <ordinal>3</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#2 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#2 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#2 Garbage Type</remote-alias>
              <ordinal>4</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 1</remote-alias>
              <ordinal>5</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#3 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#3 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#3 Garbage Type</remote-alias>
              <ordinal>6</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 2</remote-alias>
              <ordinal>7</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#4 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#4 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#4 Garbage Type</remote-alias>
              <ordinal>8</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 3</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 3</remote-alias>
              <ordinal>9</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#5 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#5 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#5 Garbage Type</remote-alias>
              <ordinal>10</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 4</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 4</remote-alias>
              <ordinal>11</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#6 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#6 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#6 Garbage Type</remote-alias>
              <ordinal>12</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 5</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 5</remote-alias>
              <ordinal>13</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#7 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#7 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#7 Garbage Type</remote-alias>
              <ordinal>14</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 6</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 6</remote-alias>
              <ordinal>15</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#8 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#8 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#8 Garbage Type</remote-alias>
              <ordinal>16</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 7</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 7</remote-alias>
              <ordinal>17</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#9 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#9 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#9 Garbage Type</remote-alias>
              <ordinal>18</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 8</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 8</remote-alias>
              <ordinal>19</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>#10 Garbage Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[#10 Garbage Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>#10 Garbage Type</remote-alias>
              <ordinal>20</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total 9</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total 9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total 9</remote-alias>
              <ordinal>21</ordinal>
              <family>Popular_Garbage_By_State.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.553846' measure-ordering='alphabetic' measure-percentage='0.446154' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Garbage Types Collected by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Popular_Garbage_By_State' name='federated.0p5ovbv0f3nlfk0zk31wo1xs15cd' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5ovbv0f3nlfk0zk31wo1xs15cd'>
            <column datatype='string' name='[#1 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#2 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#3 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#4 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#5 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#6 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#7 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#8 Garbage Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[#9 Garbage Type]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total 9]' role='measure' type='quantitative' />
            <column-instance column='[#1 Garbage Type]' derivation='None' name='[none:#1 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#2 Garbage Type]' derivation='None' name='[none:#2 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#3 Garbage Type]' derivation='None' name='[none:#3 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#4 Garbage Type]' derivation='None' name='[none:#4 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#5 Garbage Type]' derivation='None' name='[none:#5 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#6 Garbage Type]' derivation='None' name='[none:#6 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#7 Garbage Type]' derivation='None' name='[none:#7 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#8 Garbage Type]' derivation='None' name='[none:#8 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[#9 Garbage Type]' derivation='None' name='[none:#9 Garbage Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total 1]' derivation='Sum' name='[sum:Total 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 2]' derivation='Sum' name='[sum:Total 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 3]' derivation='Sum' name='[sum:Total 3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 4]' derivation='Sum' name='[sum:Total 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 5]' derivation='Sum' name='[sum:Total 5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 6]' derivation='Sum' name='[sum:Total 6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 7]' derivation='Sum' name='[sum:Total 7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 8]' derivation='Sum' name='[sum:Total 8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total 9]' derivation='Sum' name='[sum:Total 9:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[sum:Total 9:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama, USA&quot;' function='range' level='[none:State:nk]' to='&quot;Montana, USA&quot;' />
              <groupfilter from='&quot;Nebraska, USA&quot;' function='range' level='[none:State:nk]' to='&quot;Wyoming, USA&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Alabama, USA&quot;</bucket>
              <bucket>&quot;Alaska, USA&quot;</bucket>
              <bucket>&quot;Arizona, USA&quot;</bucket>
              <bucket>&quot;Arkansas, USA&quot;</bucket>
              <bucket>&quot;California, USA&quot;</bucket>
              <bucket>&quot;Colorado, USA&quot;</bucket>
              <bucket>&quot;Connecticut, USA&quot;</bucket>
              <bucket>&quot;Delaware, USA&quot;</bucket>
              <bucket>&quot;District of Columbia, USA&quot;</bucket>
              <bucket>&quot;Florida, USA&quot;</bucket>
              <bucket>&quot;Georgia, USA&quot;</bucket>
              <bucket>&quot;Hawaii, USA&quot;</bucket>
              <bucket>&quot;Idaho, USA&quot;</bucket>
              <bucket>&quot;Illinois, USA&quot;</bucket>
              <bucket>&quot;Indiana, USA&quot;</bucket>
              <bucket>&quot;Iowa, USA&quot;</bucket>
              <bucket>&quot;Kansas, USA&quot;</bucket>
              <bucket>&quot;Kentucky, USA&quot;</bucket>
              <bucket>&quot;Louisiana, USA&quot;</bucket>
              <bucket>&quot;Maine, USA&quot;</bucket>
              <bucket>&quot;Maryland, USA&quot;</bucket>
              <bucket>&quot;Massachusetts, USA&quot;</bucket>
              <bucket>&quot;Michigan, USA&quot;</bucket>
              <bucket>&quot;Minnesota, USA&quot;</bucket>
              <bucket>&quot;Mississippi, USA&quot;</bucket>
              <bucket>&quot;Missouri, USA&quot;</bucket>
              <bucket>&quot;Montana, USA&quot;</bucket>
              <bucket>&quot;Nebraska, USA&quot;</bucket>
              <bucket>&quot;Nevada, USA&quot;</bucket>
              <bucket>&quot;New Hampshire, USA&quot;</bucket>
              <bucket>&quot;New Jersey, USA&quot;</bucket>
              <bucket>&quot;New Mexico, USA&quot;</bucket>
              <bucket>&quot;New York, USA&quot;</bucket>
              <bucket>&quot;North Carolina, USA&quot;</bucket>
              <bucket>&quot;North Dakota, USA&quot;</bucket>
              <bucket>&quot;Ohio, USA&quot;</bucket>
              <bucket>&quot;Oklahoma, USA&quot;</bucket>
              <bucket>&quot;Oregon, USA&quot;</bucket>
              <bucket>&quot;Pennsylvania, USA&quot;</bucket>
              <bucket>&quot;Rhode Island, USA&quot;</bucket>
              <bucket>&quot;South Carolina, USA&quot;</bucket>
              <bucket>&quot;South Dakota, USA&quot;</bucket>
              <bucket>&quot;Tennessee, USA&quot;</bucket>
              <bucket>&quot;Texas, USA&quot;</bucket>
              <bucket>&quot;Utah, USA&quot;</bucket>
              <bucket>&quot;Vermont, USA&quot;</bucket>
              <bucket>&quot;Virginia, USA&quot;</bucket>
              <bucket>&quot;Washington, USA&quot;</bucket>
              <bucket>&quot;West Virginia, USA&quot;</bucket>
              <bucket>&quot;Wisconsin, USA&quot;</bucket>
              <bucket>&quot;Wyoming, USA&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Ontario, Canada&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]</column>
            <column>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[Multiple Values]' field-type='quantitative' max='353759.70000000001' range-type='fixedmaxindependentmin' scale='log' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]' value='bold' />
            <format attr='font-size' field='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#1 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#2 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#3 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#4 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#5 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#6 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#7 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#8 Garbage Type:nk] / ([federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#9 Garbage Type:nk] / [federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[:Measure Names]))))))))))</rows>
        <cols>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{01384695-F912-431F-B6C3-3536854AFADB}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card size='31' type='pages' />
            <card size='70' type='filters' />
            <card size='137' type='marks' />
            <card size='182' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#1 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#2 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#3 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#4 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#5 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#6 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#7 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#8 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:#9 Garbage Type:nk]</field>
            <field>[federated.0p5ovbv0f3nlfk0zk31wo1xs15cd].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2049510-5710-47BB-8EBC-2F512A98D0C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdZ5AUZ57n8W/ZLtPeQhva0A668Y13PYDwLAiQNNJIoxlptXva25ud3Yh7
      s68m7uJe7EZcxGkvdudmYyQQjIQQVtJIA8I2jW1MG9rTBtrT3lV1+bwXHZVDi8YMHtX/E6GQ
      VF2VlZmV+fye58knn9QoiqIghBAi4Gif9woIIYR4PiQAhBAiQEkACCFEgJIAEEKIACUBIIQQ
      AUoCQAghApQEgBBCBCgJACGECFASAEIIEaAkAIQQIkBJAAghRICSABBCiAAlASCEEAFKAkAI
      IQKUBIAQQgQoCQAhhAhQEgBCCBGgJACEECJASQAIIUSAkgAQQogAJQEghBABSgJACCEClASA
      EEIEKAkAIYQIUPr7/bG3txeXy/Ws1kUIIcQzpFEURXneKyGEEOLZky4gIYQIUBIAQggRoB4r
      ABRFwefz4fV68fl8/LA3yWaz0draisfjeajlud1uWlpasNlsj7Naz5yiKOo/D3rd///32md+
      99uvz4N/nT0ej7o+Pp8Pn8/3nNfs+fPvmzv/eRK/mc/nY3Bw8IX4/R+X/3h+kY7pF8mDytKn
      5b4XgR/E6/Vy+PBh2traiIyM5Kc//Sl6/Z8XefnyZfbt28c///M/k5CQ8MDldXd38z//5//k
      nXfeYcmSJY+zas/U6dOn6ejo4I033kCj0aivX7x4kcbGRrZv347RaMTn89HQ0MDZs2fp6ekh
      KCiIxMRE5s+fz8SJE+9aZnl5OWazmddee43w8PBnvVkqj8fDlStXuH79Om63m6ioKF5//XWu
      X7+OzWZj0aJFT30d2tvbmTBhgrp/fT4fnZ2dxMXFjdnnz0NHRwdff/01RqNRfW3btm2EhoY+
      1nKHhobYt28fP//5z8cs+2V04sQJbt26hU6nQ6fTkZyczPz58zGZTM971V4Ig4ODHDx4EEVR
      0Gg0WCwWZs+eTXp6+lM9vh+rBTAwMMDZs2dpamri3Llz9Pb2Pqn1eqlUVlZy+fLlu1K7vr6e
      y5cvqy2gkpISPvroI2pra9FqtQwMDHDq1Ck+++yzMZ/zer0UFBTQ1NTE1atXaWhoeGbbMp5L
      ly5RWlrKxo0beeedd8jMzAQgJSWF7OzsJ/5947WmPv/88zEtSbvdzoEDB8atKT3r2qXdbsdo
      NLJ582b1H6vV+sD1GW87f/h34LkH3JPQ2trKokWL2Lx5MytXrqS5uZlLly6Nec9f+rs9zd/5
      Qb/Nk+ZyuXC5XGzatIlNmzYxbdo0vvnmG/r6+h55nR7m/Y/VArhx4wYej4eNGzfy1Vdfcf36
      dVauXPnAlRoeHsZmsxEUFERYWBha7d05NDIyQl9fH2FhYVgsljEngdfrZWhoCIfDgcViISQk
      ZEzN0O12YzAYGBkZYWBggNDQUKxWK4qi0NPTg8/nIzo6Gp1Opy7T5/MxPDyM3W7HbDYTGhr6
      RE88RVE4ffo0wcHB/Pf//t8JDw/H4/HQ1tbGzZs3x7y3ubmZnp4eNmzYwKlTpygrK2PWrFnP
      pSBQFIUzZ87wN3/zN0RFRQEwa9YsAPr7+xkZGSEyMhJFUSgtLaWkpASA0NBQ1qxZg9lsprS0
      VG09JCUl8ZOf/ASDwcC5c+fIzc3l2rVrDA4OsmnTJsrKyigpKUGj0bBkyRJSU1M5evQot2/f
      Zu/evWi1WvLy8iguLqa1tZU9e/ZgNptZvXo1er2ekydP0t7eTkREBKtWrXrsWvjDCgoKIjIy
      csxrbrebgoICGhoaMJvNrFixgvj4eABqamq4cOECHo+HGTNmkJeXh1arxeFwcO7cOW7duoWi
      KNjt9mey/s9CaGiouo+ys7NpaWkBRoebnzhxgsHBQfX4GBoaory8nKVLl6LRaPB4PJw8eZKV
      K1cyNDTE8ePHGRgYIDExkZ/85CcYjUZOnDjBwoULOXPmDDqdjvz8fM6dO0djYyMA06ZNY/bs
      2Wi1Wvr6+igoKKCnp4fQ0FBSU1OZM2cOXq+X8+fPU1dXh9FoZM2aNcTExDyT/aPX64mIiFD/
      febMGZxOJwClpaVcu3YNrVbLokWLSE9P58qVK8THx6u9K42NjdjtdqZMmUJFRQVXr14FYNGi
      RWRmZnL79m06OjqIjIyksLCQJUuWPHoA+Hw+SktLiY6OZu7cuRQWFlJaWnrfAOjp6WHPnj00
      NTXhdrvR6XSkpqby85//nJCQEPV9V69e5ejRowwNDWGxWFi3bh2LFy9Gq9VSV1fH/v376enp
      wePxYDAYmD17Ntu3b0ev11NSUsK+ffvIysqipqaGkZERrFYrK1eupLS0lObmZgBycnJ49913
      0ev1akFy+/ZtPB4Per2e3NxcXn/9dcxm86PuojH8J7NOp8NqtaLRaDAYDCQnJ5OcnDzmvZWV
      lfh8PubNm0dTUxP19fUMDw+P2UfPit1ux2Aw3FW4AXR2djI4OEh2djaVlZWcOXOGrVu3YjKZ
      2L17N06nE5PJhEajYdWqVZhMJg4dOkRxcTHz5s2joqKCiooKIiMjWbJkCbdu3eLixYts3boV
      l8vF/v37ee+991iwYAGlpaWsWLECg8FAcHAwZrOZ1tZWVq1ahU6nw2w2891332E0Gtm+fTvl
      5eX86U9/4rXXXhu3gvEsnDt3ju7ubrZv305nZyeff/45//AP/0Bvby9Hjhxh69atWCwW9u3b
      h9VqZerUqfzxj39Er9ezefNment7OX78+I+mv7ypqYnBwUHa29upra1l69at+Hw+Dh48yOzZ
      s0lLS+PYsWNcvnyZGTNmUFZWxowZMwgLC6OpqYm2tjYUReHQoUNMnz6dyZMnc+rUKS5cuMDy
      5cspLi6msbGRiRMnkpeXh9frJTg4mE2bNuF2u/nss8+Ij49nwoQJ7N69mzlz5rB06VLq6+up
      q6tjzpw5FBcX09LSwpYtW+jq6uKLL77g7/7u78ZUFp8Wu91OXV0dDoeD6upq4uLiiImJoa2t
      jdOnT/PWW2/hcDg4cOAA77//PjqdjosXL7Jt2zZgtNs4Pz+ftrY2CgsL2bZtGz6fjz179vD+
      ++/T399PYWEhbrebVatWERsb++hdQC6Xi8rKSjIzMwkNDWXKlCk0NDQwMDBwz88MDg6qX/7O
      O++Ql5dHRUUFJ06cGHOQd3d3s3TpUjZv3oxGo+HAgQO0tbUB0NXVRUhICBs2bODtt98mJSWF
      goICysrKAHA4HPT29tLU1MSiRYtYtGgRAwMDHDp0iLCwMNatW0d0dDRFRUV0d3cD0NfXh16v
      Z+3atbzzzjtMnTqVCxcuUFRU9Ki75y5arZbs7Gy6urr4l3/5F86cOcPAwMBdF1G9Xi9lZWVM
      mjSJyMhIcnNz6ezsVLf/WXM4HGohfj+XL19my5YtJCYmEh0drXaBaLVapkyZgt1up6GhgbCw
      MDo6OoDRGnJycjJbt25lwoQJVFZWkpeXR1hYGNHR0SQmJtLS0kJERAQGg4GYmBhiYmIwm81E
      REQQFBRETEwM0dHRKIrCzZs3mTt3LiaTialTp6otlGehtLSUf/3Xf+Vf//Vf+bd/+zeGh4cp
      LS1l/fr1REZGkpWVRVJSErdu3aK6upo5c+aQlJREdHQ0q1evpqSkhOHhYbq6uli7di1RUVHE
      xMRgMBh+FF1AAHV1dVRUVFBfX4/FYkGv1+NwOBgYGGDq1KmYzWYWLFhAZWUlFouFhIQE6uvr
      gdHja/78+fT39+PxeMjOzsZsNjNv3jxqampQFAWn08m0adNYv3490dHRBAUFMXXqVDo7O2lp
      acFisdDb28vt27exWCwsWrSIqKgooqOj0Wq1KIpCdXU18+fPx2q1kpycjNFofGZd2zabjYqK
      CiorK+nu7iYsLAyAsrIy5s+fT2hoKLGxsSQmJtLc3ExWVhYtLS2MjIwwNDREb28vKSkpVFVV
      MXPmTMLDw4mMjGTy5MlqK6i/v59f/OIXTJs2DZPJ9OgtgOrqalwuFzk5OWg0GnJycjhz5gwV
      FRX3vCiYkpLCr3/9a9xut3ryV1VV0dTUNCYA1qxZo14EnjhxIh999BEVFRUkJiayYMECFixY
      gMvlwu12k5CQQGlpKS0tLcyePRsY7TN97733SExMxO12U1ZWRnx8PO+99x4AwcHB7Ny5Uy0c
      cnJyyMnJwe1243K5mDBhgrpeT9KGDRvw+XxcunSJzz77jAMHDjBv3jw2bdqkdlW0t7fT0dHB
      6tWr0Wg0pKenY7FYKC0tJTMz85kXBuHh4fT29qrdavcyMjIybgvF6XSyc+dO9cA1Go3qbx0U
      FMTcuXPVGrrdbufs2bNqmHu93oe++Ol2uxkcHGT//v3o9XoURSE4OPgv3dxHNmPGDN56660x
      r/m7KGH0mAwJCcFut2Oz2UhISFB/y5CQEEZGRhgZGcFsNqv7+cdS8PutWLGCxMREYLRQO3Lk
      CGvWrOH27dt8/vnnwGhLOTo6Go1Gw6xZsygoKGDKlCk0NzerLam2tja++OILNBoNiqIQExOD
      oiiYzWbmzJmj7reuri52797N9OnTCQ8Px2AwoCgKIyMjBAcH37V/FUVhaGiIP/3pT+rvdr9j
      /kmLiYlh8+bN6PV6PB4Pn376KZMmTcJut1NeXk5lZSUwel7o9foxITk0NMT06dPRaDTY7XbK
      ysqorq5W35+VlQVAbm4uERER6vY+cgCUlpZiNBoZHh6mrKwMh8OBRqOhrKyMhQsXjnvwOp1O
      CgsL1dqO1+tV+/nvJS4ujpCQEPViyMDAAMePH6eurg673a7WoN1u97if12q1d3UB3DlSCWB4
      eJiCggIqKysZHh7G4/Go/35YD9NM94/oWbFiBeXl5RQVFakjgv7bf/tvaDQaamtrGRkZQavV
      UlZWhsfjwWq1UllZidvtfuajQfzddOfPn2fp0qVotVpsNpt6gvglJydz4cIFVq5cid1uZ3Bw
      EBj9vbxeL6+++ioARUVFagvghyZMmEBwcDBr1qxBq9WOqb3r9Xrsdrt6rPhrj/79bjKZiIiI
      YN26dWohMzQ09FxHmcTGxlJXV0d2djZut5uGhgby8vJQFIXa2lqmTZuGTqejurqa+Ph4rFYr
      g4ODDA8PExYWhtvt/lEOs/VfnHS73YSEhKijyoKDg9WhrwDx8fE4HA4uXLhAdna22n0aExPD
      tm3bCA8PV98/XjdfQ0MDU6ZMYdWqVXi9XrUWHBcXR2NjI52dnWqL1OfzodVqiY2NJTU1Va1M
      Dg8PP5dj6M5ybcKECRgMBjZu3IhGo1HPC41Gw8yZM7l06RI2m009xyZMmADApk2b1OtKPp9P
      7f6+8zseKQD83T8Oh4Ndu3aN+VtDQwNDQ0PjXnw7efIk3377LStWrCAnJ4egoCA+/fTT+36X
      f+y5/0fYs2cP9fX1rFmzhpSUFHQ6Hf/yL//yKJsBjO6Eb775hqKiIl555RUyMjLwer3s3r37
      oZdhNptxOBx4vd4xfYU2mw2dTjem0NZoNERHR5Ofn8+CBQvYsWMHpaWl2Gw2zGYz5eXlABw6
      dGjMd2g0Gm7fvk1SUtIjb+uj2rBhA19++SU1NTVYrVa6u7vVwPJbvnw5+/fvZ8eOHZhMJoaG
      hoDR1pbD4eDLL7/E7XbT3d1NamrquN8zY8YMvvjiC/7whz9gNpvp7e1lw4YNJCYmMn36dD75
      5BN1+GB8fDyRkZHs2LGDCRMmkJ+fz4oVK9i3bx/JycnqtYstW7Y8k/7b8axcuZL9+/dTU1ND
      V1cXCQkJxMbGEhoaSnFxMV988QUmk4nW1lZ+/vOfY7FYyM3NZceOHaSkpNDe3q5eBHzZaTQa
      vvrqKywWCy6XC6fTyYYNGzAajSxYsIBPPvmExMRE+vr6SEhIYO3atRiNRjIyMvj+++/59a9/
      DYy2lqZNm8auXbtISkqir6+PuLg4NmzYcNd3xsfHc/r0aZxOJ/39/bS1tTFlyhSsViurVq1i
      3759aovU33pdvHgx+/bt48aNG8DoObx9+/b7VlKflPb2drU89A+uSE1NJTU1lR07drBr1y4s
      Fos6QCQpKYnExES++eYbrFarWrPPzc2lvLycXbt2ERwcTHd3N2vXrlV/Bz+tVvtoAeBvcrz6
      6qvMmDFDfb2srIzDhw/T0NDAzJkz7/pcbW3tmGaO1+u9bxNLURQqKyux2Wzq6Inq6mpmzJjB
      qlWr0Gg0jz1ZncvlorGxkbS0NNauXYtOp2NoaGhMjcLfNATGjDjyi42NxefzUVZWRl5eHjBa
      821oaCAqKkqtrVZUVDBt2jQ1EIKCgtQRTlqtlt7eXm7dusXChQvVLiAYHUK3c+dOysrKnksA
      REZG8stf/pK+vj4cDgcRERFoNBqmTZum1lSsVitvv/02DocDnU7Hb3/7WwwGAxaLhQ8++IC2
      tjYiIiIIDQ1VP/PGG2+MaUmEhoby7rvv0t3djcfjITIyUu3GWbZsGRkZGTidTmJiYtBoNLz1
      1lu0tbWh1+sxm81kZWURHx9PT08PJpOJyMhIgoKCnvr+mTRpEnFxcXe9npSUxPvvv09bWxuz
      Z89m4sSJaDQazGazuu5ut5t169ap+2H58uVMmTKF/v5+li9fjl6vv6vF+jLaunWrGmZarRaz
      2axeW1q6dCm5ubkMDAwQEhKiFmQACxYsIC0tjdjYWGC0AFu8eDE5OTn09fURGhqqvt9/YdTP
      v/97enqIi4vDaDSq5U1eXp56/NbU1HDr1i1gtPb8/vvv093djU6nIzIy8q7W7tMQGRnJ3/3d
      36nnhsFgwGq1qr/9e++9N+55ERQUxJtvvonBYFDf6z8Xe3p6cLlcREVFERwcjMfjGVN+aDSa
      RwuA69evo9FomDdv3pjRIWazWR0Oemcw+EVERFBTU8N3332HxWKhuLiY5uZmdVy5X1FREQ6H
      g87OTs6fP09ycjI5OTnqMiorKzl27Bgej4eLFy8+yiao9Ho9ISEhNDY28v3336PT6bh06RLd
      3d1MnjwZGE3j//W//hcRERH84z/+412Fyty5czl9+jS7d++mvr4eq9XKlStXGBgYUJtlbreb
      Q4cO8eWXX5KdnU1ERAStra1UVFQwc+ZMdbjk8PAweXl5auDB6MERGRlJSUkJ69evfy59w0FB
      QWrT8s7X/M6ePUtDQwNxcXG0trYSFxenhltoaOi4LcLxrhkEBQWNe9OgTqdTu3bufO8PWxP3
      +q6nyWAwjFuR0Wg0hIWFjVt7HG/dYXQ7J06ceNeNgS+7kJCQe45i02q1REVFqcOM72SxWEhJ
      Sbnr/f5z4k4/3M8ajUYdOHAnn8/HRx99pN5kVVFRwVtvvaWeV1ardcx9HM+CP2zu5V7nhUaj
      ueu89L//zjIExj9O/+IA8Pl8dHV1MXXq1LtWOCQkhBkzZjAwMIDL5cJsNhMbG6sm0+rVq+no
      6KCgoICgoCDmz59PUFCQemDodDrS09MxmUycPHkSRVHIzc3l1VdfVX+Q7du38+WXX3L06FGC
      g4NZtWoVx48fV5fh/847L6RFR0ePqVWYTCb1PXq9ng0bNvDZZ59x/PhxdSSC1WpVD6jy8nIG
      BwdZvXr1uH3wcXFxfPDBBxw8eJArV67g8/mwWCxs376defPmAaMH8quvvkphYaF6/0RQUBAr
      Vqxg3bp1ALS1tTF58uS7avlBQUHMnj1bDYjnMRz0QRYvXkxKSgr9/f1MmTKFhISE59b1IsT9
      aLVaPvjgA1pbW/H5fCxfvvyFPKeehWc+HbTL5WJgYACLxXJXyvovDmk0GvUCn9lsHlPjVRQF
      h8PB8PAwoaGhT6yJ73A4GBoaUseY3/l9//f//l80Gg1/+7d/e9+LsF6vl4GBATweD2FhYRiN
      xnFHGjidTpxOJxaL5ZmOMhBCiDs9885Fo9F4zzvrNBqNWmDe6wYsfx/qk7pBy89kMo17td9u
      t+N0Onn77bcfOALnQc04GF3/e32XEEI8S/JAmAfw+Xw4nc4nHjhCCPG8SQAIIV5qPp9vTO+B
      eHgv//gy8dTduHEDu92uTlPrv2Hrfvxz5N85hNE/5/mP6eKwoijcuHGDyZMnq9vlH945adIk
      dSKzlpYWkpKSflTb/pdobm6mt7dX7QKNjY0lLCzsvoX2eMeLf678O18rLCxk6tSpz2zStqdF
      URS6u7tpaGhAo9GQlpZGVFTUizsdtAgMX331lToZ15UrV/jd7373wPlRHA4H33zzzZjXbt68
      edcUwC87jUbD0aNH6ezsBEZP4j/+8Y/s2bNHHdPd3d3NsWPHfpR39T6sEydOUFNTQ3t7O2Vl
      ZezYsUOd5+de+vr6OHbs2Ji77Ovr67l27dqY9/nnw3nZFRcXs3v3bgYGBujr6+PMmTNP/Tul
      BSAeyGAwkJ+frw6V++Mf/0hNTQ3z5s2jr69PraW4XC6GhoYICQlRZzH1PwQkNDSUxsZG2tra
      SEhIUO8rGBgYoLW1FaPRSFJS0jO5cetJy8zM5MaNG0ycOJHBwUF0Oh1BQUHYbDZCQ0Npa2sj
      Li4OvV5Pd3c34eHh2Gw2BgcHSUhIoL+/n9u3b6PVaklOTsZkMqlTlyuKQltbG2FhYSQnJ6PR
      aBgcHMTn89He3g5AamqqOqjA5/NRX1/PyMgIycnJhIWFoSgKnZ2dxMbGcvv2bXQ6HdHR0XR1
      ddHV1UVwcDCJiYlPvXWyaNEi9V6Oq1evUlZWRnp6Oj6fj9bWVvWGrQkTJuDxeLh58+aYYyg8
      PJyGhgb6+/uJjY1Vh3zfSVEUWlpa6OnpIT4+Xr1p0OPx0NzczMjICLGxsU+9Zv2XGhwcpKCg
      gJ/97GfExsaq6wyjlamWlhacTicTJ05UB5p0d3djsVhobW3F4XCQnp6O2WxGURR6e3vp6OjA
      bDYzadKke95MqPvNb37zm2e1keLldOnSJWbNmkVQUBCDg4OcPn2auXPnotPp+Oabb5g6dSo6
      nY729nYKCgpITU2lqKiIxsZGNBoN/f39BAUFce3aNbq7u3E6nepEaTt37lQLgFu3bqmTVr1M
      NBoNJSUlzJo1i+bmZrVg95+wZ8+eJTs7m9jYWPbv34/T6eTQoUNoNBqioqL44osv8Pl8tLS0
      cO7cOaZPn46iKOzcuZPq6mp12l+bzUZqairnzp3j0KFD6PV6WlpauHjxIrm5uej1eg4cOEBL
      Sws+n4/jx4+TlZWFXq/n008/ZXh4mOPHjxMTE8Pw8DB79+5Fp9NRW1uLw+G460a7J6mkpIS0
      tDRCQ0MZGRmhsLCQ1NRU4uPjKSws5OzZsxiNRgoKCjAYDISFhXH27Fna2trw+Xx0d3cTHBzM
      lStX6O3txeFw4PF4SExM5Pr162rYXbhwgfPnz2MymTh16pTa1fTHP/6R8vJy3G43586dIzs7
      +4WqbDQ2NjI8PMz8+fPVYNJqtWg0Gvbu3Utvby/Dw8McO3aMhIQEwsPD+eyzzzh//jwul4ub
      N29SVVXFjBkzaG5uZs+ePWg0Gm7evHnf6VekBSAeyOFw8J//+Z94PB76+vpYv349SUlJDA4O
      jpkwT1EUPB4PISEhrFq1ira2NrZs2TJmOY2NjWzcuBGAqqoq4uLiWL9+vTpT48soOTlZvano
      xo0bZGRkEBwcTFFREbm5ufT19al3a9rtdi5cuMD777+v3pz4t3/7t+rzcv/zP/9TbVWZzWZ1
      HhqXy8X//t//myVLluD1elmzZg2zZ89GURT27t1LfX09MTExdHZ28uGHHwKo67BixQqampqY
      MGEC//W//leMRiMnT55k1qxZLF++HJ1O90z2/WeffaZOeTJv3jxmzZqFx+PhwoUL/OpXv8Ji
      sbBw4UL+4z/+g9mzZ7Nq1SqOHDky5hiaN28e3d3dvPLKK3ct3+fzUVBQoN6tn5qaytmzZ0lK
      SqK9vZ2NGzeqd8e+SLV/GH0ozr1aJW+++aZ6fFgsFiorK9XW4FtvvUVcXBwul4t/+7d/A0bn
      FEpPT2fdunXqzLj3IgEgHshkMvH2229jMpno6enhu+++Iyoq6p41xjsP4vEOaP9rKSkpXLly
      hY8//piEhAQWLFhwV5P+ZaDX64mLi6O5uZnOzk7mzZtHeHg4Bw8eVGe2vHMW0+3bt6vNeKfT
      yddff83AwABarZaenh51Zlv/HFEajQaj0UhkZCQ2mw34c+1Qo9Gok6jBaMB8/fXXwOh8VP4u
      gejoaDZv3qzeyzJr1iz27NlDQ0MDycnJLFy48KnfDfv6668zYcIE+vv7OX36NGfPnlWnavbP
      txMaGorRaLxrErwfHkfjHVf+Jw0ePXoU+PMU4Tqdjvnz57N//34iIyPJyclh5syZL9QF+eDg
      YDo6OtQbYf18Ph8XLlxQp3YeGhpSa/P+h0rd+W8Yfdra9evX+fjjj0lMTGTp0qX3nMxOAkA8
      FKPRqM6RMn/+fKqrq0lMTLxn7UKj0dx10dM/f7ufxWLhnXfeob+/n+rqavVJRy/jA9AnT57M
      9evX8Xg8hIeHo9frCQ8Pp6ysjAkTJqiFjX8iNL+ioiKCgoL4xS9+gV6vZ8+ePeMu3+PxMDQ0
      NO7d811dXWRmZmI2mwkJCVEnJIQ/31BpNBrH7NfIyEg+/PBDuru7uXr1Kt9++y1vvPHGU60Z
      GwwG9SbORYsWcfz4cebOncvw8LA6HbPH48HpdKp3yP/w+BrvuPIzmUzqtCn+yRz9BeOsWbOY
      OnUq7e3t6lxkU6ZMeWrb+peKi4vj1KlTjIyMjJl8rru7m2vXrvHLX/6S4OBgqqurqampue+y
      wsLCeO+99+jt7aW6upo9e/bwX/7Lfxn3vTIKSDyQfy71GzducO3aNU6cOEFGRgYGg4Hh4WEa
      GhpobGzk1KlT6mfMZjODg4PU1tbS0dGB2+0mPDyc+vp6mpqauH37Njdu3ODSpUtqt9HLLCMj
      gwsXLoyZ+yotLY3Tp0+rkwqOx/8s6u7uboqKitSHfsBoDba1tZXW1lYOHz5Menq6Woj7HxxU
      VFRES0sLKSkpJCYmMjQ0REdHB1qtltu3b1NTUzNuoV5UVERFRYU6Wd+zGKHU3AvqWZYAACAA
      SURBVNzMjRs3KCsr4+jRoyQlJWGxWIiIiKCwsJDu7m6OHz+uTvN+5zHU2toKjBZu9fX1amvr
      TkajkYSEBKqqqtBqtQwODlJSUoLb7ebYsWN0dHRgMpmwWCx4vd6nvr1/iZiYGFJSUtTuvBs3
      bnDu3Dl16pv+/n5qa2vHnGP3cv36dUpKSlAUhbCwsPtuq1wEFg9kt9vp6Oigs7MTp9PJokWL
      yM7OxmAwYDKZuHTpEp2dnWRlZRETE0N8fLz6cI2LFy/S29tLWlqa+gCPa9eu4Xa7yczMpK6u
      juLiYrq7u1m1apU61fTLxmKxYLPZmDNnjjobaXBwMF6vl5kzZ6oXHF0uFwkJCWpBPmHCBBoa
      GqiqqsJqtZKZmak+Oa2oqIi+vj6ampqIj49n5cqV6HQ6NXBbW1vxeDxs2LCB8PBwdDodWVlZ
      XL9+ndraWnw+HzNmzMBsNuN2u8fMqmk0GiktLeX69eu4XC5eeeWVu+bdepL8YdbV1YXNZiM3
      N1cdSJCRkUF1dTXFxcVYrVbWrVuHwWBQp0u/evUqPT09ZGdnExISgtPppLi4GI1GQ1JSEh6P
      h7i4OMxmM5mZmdy6dYvKykqGhobUZwo7HA6uXr1KTU0NycnJ5OXlPbdnRY/H//Q/n89HeXk5
      7e3tJCYmkpqailar5dKlS9jtdqZNm0ZUVBSxsbG4XC4SExPV1pL/NzYYDFRWVlJWVkZvby8b
      N2685+ymcieweCx3Hj7jTXz3w7/98LX7fT5QjLcP3G43u3btYvv27Wqg+P927NgxoqOj1Wdu
      PMx+f9jvfV7utS4Pcww9zLLG60p6UfnX9WG3937LeNBn5BqAeCz3O7judwH4YT4fKO61n+Lj
      49Hr9Xf93f9AkHvtu4fdpy/Svv9LtuVB6/0on3mRPIlz5KGPAWkBCCFEYHpxOsGEEEI8UxIA
      QggRoCQAhHgCvF4vBw4coK6u7qks3z9T5Ms8oVx3dzeffPIJHo8Hr9eL2+3G7XbftU23b99+
      Yt/p8/nG3K3+Q1euXOH7779/qffr45AAEOIJqKysxG6333fM/+Pas2fPSzvrpc/n4+DBg+Tn
      56PX6zl37hyffPIJu3fv5g9/+APnzp1T74DesWPHI3/PrVu3xoyAuX37tnpn9HhmzJhBY2Mj
      zc3NL+1UJI9DAkCIx6QoCidOnGD16tVPfbTJyzSa5U7+iQH90xh0dXUxe/Zstm7dyooVK6iq
      qqKkpOSxv+eLL74Y8/+RkZEsWbLknu83GAwsW7aMgoKCx/7ul5EMAxXiMd2+fRu9Xq/OY6Qo
      CmVlZVy+fBmAJUuWMHnyZE6dOkVjYyMA06dPZ968eeh0Og4fPkxISAg3btzA6/Xy6quvEh8f
      j9vt5uLFi1RVVaHRaOjp6QHg4sWLxMbGkpaWBkBraytNTU0sXLjwOWz9wykpKSEvL29MgFmt
      VsLDwwkPD2fJkiWUlJQwd+5c9e9er5fz589TXV2N1+slIyOD5cuXo9fruXXrFseOHcPj8ZCQ
      kMCKFSv49ttv6ezsZOfOnWg0GjZt2oTBYKC6uprY2FgURaGqqoqLFy/i9XpZsGAB06ZNIz09
      nUOHDuFyuV6oGUKfBWkBCPGYmpubSUlJUQu3mpoazpw5w+bNm9m8eTMmkwmfz8eECRN48803
      2b59O+fPn1fn879y5QrBwcG8+eabzJgxQ50C4Pz589y8eZPt27fz2muvERwcjKIoBAcHU1BQ
      gNfrRVEULl68+MLPn9TU1KQG1g/55/D3z47q5/P5iIiIYPv27bz55pvU1NSo8+AcPHiQFStW
      8NZbb5GWlobP52PdunVERkaydetWXn31VcLDw3E4HOp1GX9orF27lm3btqlz7hgMBiZOnEhH
      R8dT3AMvJmkBCPGY+vv7xxRe165dY926deojCmNiYlAUheTkZOrr67Hb7QQFBdHX10diYiKh
      oaHMnz8fgEmTJtHc3IzH46G2tpZXX32VyMhIFEUhKCgIjUZDVlYW33//PT09PVitVtra2liz
      Zs1z2faH4fF48Pl86pQFfqdOnaKkpIT+/n50Oh0/+9nPxvxdr9eTkpJCY2MjQ0NDWCwWuru7
      gdHWQ3V1NbNnzyYjI0MNQL1eT2ho6LhdZaWlpeTn56tTQvtnZAWIioqit7eX5OTkJ7rtLzoJ
      ACEek16vHzPSxOFw3DX3yu3bt/n888+ZM2fOmOmP78Xr9eLxeMadw8VgMDBv3jwuXrxIWlra
      Qz2j+XnSarXjXmDNyclh8uTJalfQD+fmGRgYYPfu3WRlZREbG4vValWX87Of/YwrV67w9ddf
      oygKr7322pgCfTzj/S5+brf7nk/N+jGTLiAhHlNkZKTaPw+jtfiysjIURUFRFPWJTVlZWSxb
      toycnJwHBoBer8dgMNDW1gagDpv0mz17NpWVlVy+fJk5c+aor//wIT0vAq1Wqz4i806xsbEk
      JSURGRk57sRsnZ2dhIeH88orrzB9+nR1xlifz4fb7WbZsmX89V//NXFxceq1FZ1Od8+RUpMm
      TaK8vFx9sLzL5VL/1tXVRVRU1JPa5JdG4EWeEE9YamoqR48eVee0X7BgAV988QWffPIJWq2W
      tLQ0Jk+ezMmTJxkeHmZwcJCuri5ycnKA8ed+0el0LFq0iAMHDjBp0iQGBgYYGBhQ32OxWMjO
      zqa2tlbttnA6nfz7v/87f/M3f/PCFWaZmZlUVlayfPnyB77Xvz+io6Pp6Ohgz5496jOU58yZ
      g8/n4/Dhw2i1WoxGIx0dHSxatAgYbVX8v//3/5g4caL61DD/8mbOnMm+ffv4/e9/rz6Tes2a
      Ndjtdvr6+oiLi3tKW//ikrmAhHhMiqLwySefsHTpUjIzM4HRLoW+vj4URSEyMhK9Xs/AwAC9
      vb3qMwP8/9jtdrVF4K/p+0ejDA4O0t3dTXR0tPpAFf8sqidOnECv15Ofnw+MXnuoqanhpz/9
      6Qs3XLSzs5M//OEP/PrXv0ar1eJ0OtHpdON2u/j3h6IoDA8Pq7Vzk8mkPh3N5XLR09ODw+Eg
      JiYGq9WqPkjdf8NcXFwcGo0Gp9OpPhjH/1hTr9dLZGQkBoOBS5cu0dHRwebNm1+4/fa0SQAI
      8QS0t7dz4MABPvjgg6c+lNBms3H27FkqKyv5+7//e/Xi6qVLl8jNzb1nP/fzdvjwYWJiYli0
      aNELU9AODg6yc+dO3n333Xs+NvHHTAJAiCdAURSuXr1KTEzMUx9J4nA4qK+vJzEx8aUqtJxO
      JydPnuSVV155YS64+p+KNmXKlBcmlJ4lCQAhhAhQMgpICCEClASAEEIEKAkAIZ4CRVHwer3P
      ezX+Yq2trdTV1QXkzJiBSAJAiKegv7+fkydP3vW6oijcuHFDndLgafN4PH9RYR4SEsKxY8ee
      2fqJ50sCQIinwOl0qnfx/pB//PqzcODAAZxO50O/PzQ0lLy8PM6cOROwD0kJJC/GWCwhXnJ2
      u52bN2+qE5j5dXZ20tLSQmhoKGlpaWi1WjIyMtQbv7q6utDpdNy8eROTyURGRgYGgwFFUWhv
      b6ezs5PQ0FCSk5PR6XT3/f7a2lo0Gg3Z2dkYjUba2tpoaGigoaFBvfPVarXidDppbGxEURRS
      U1MxmUxjlpWTk8P58+ex2Wzq9Avix0n3m9/85jfPeyWEeJn19vbyu9/9Dq1WS3t7O3a7nfDw
      cL755hu6u7vR6XScPHmSCRMmEBUVxfHjxzEYDERHR/PVV19RWFioPg+gvLycnJwcKisr+frr
      r7FYLNy4cQO3263OYvlDQ0ND7Nq1C6PRyMDAAAUFBcycOZPy8nKqqqowGo309vYSHR2Nz+fj
      97//PS6Xi97eXrq6utSHtPjp9XoaGhoIDg4mOjr6WexC8ZxIC0CIx3Ts2DFeeeUVZs6cqb7W
      0dFBVlYW7733HgDBwcG0t7eTkZGhTkYGo1M/vPnmm8THx+P1evntb39Lb28vra2tzJo1i8WL
      F2MwGO57k1JZWRkZGRm88sorKIrCF198QWNjI0uWLOHq1ausXbtWnQrhyJEjzJw5k2XLlt1z
      mRqNhri4OLkOEAAkAIR4TO3t7WzcuPGu1+/sstHr9WNmn7yTvyDW6XTExcUxODhIXl4eBw4c
      4MaNGyQmJrJ06dJ7dsd0dnbS1dXFgQMHgNGHr/9w5s0713XNmjUPvOvVZDJht9vv+x7x8pMA
      EOIxhYaG0tvb+9hz8Hi9Xrq7uwkPDyc6OpoPPviA3t5erl69ypEjR3jttdfG/ZzVasVsNjNr
      1qwx6wSj4XLnxVz/ut6rO8mvv79ffcSl+PGSUUBCPKaFCxdy8OBB6uvrqaqq4saNG3/R52/e
      vElLSwtHjx7FZDIRHh7O2bNnKSsrw+v1jpk3p6mp6a4HmE+dOpXKykp6enpwuVyUlpbS2toK
      jD6N7OzZs7S0tDA8PMycOXP4/vvvqamp4caNG1RUVOD1ejl06BCDg4PAnx/ROHHixMfcM+JF
      JwEgxGPKzs5m7dq1XLt2jaqqKqxWK1arlenTp6vvSUhIYNKkSQBkZWWNma+/vr6ewsJCzGYz
      b7zxBnq9nuzsbJqbmzl69Ch2u51169bh8/koKCi46+EpCQkJbN26lZqaGi5cuEBYWJg6Id36
      9eux2WwUFhZis9lITk5m69atlJeXU1paqk6j7P83jI5M8nq96iMtxY+XTAYnxHO0e/duVq1a
      9VC17aGhIb766iveeOONu56v+6T4fD6++uorJk6cyIIFC57Kd4gXh7QAhHiOEhMTH/r5ARaL
      hW3btj21wh9Gp4Kw2+1jrieIHy9pAQghVHa7HY1Gow4bFT9uEgBCCBGgpAtICCEClASAEEIE
      KAkAIYQIUBIAQggRoCQAhBAiQEkACCFEgJIAEEKIACUBIIQQAUoCQAghApQEgBBCBCgJACGE
      CFASAEIIEaAkAIQQIkBJAAghRICSABBCiAAlASCEEAFKAkAIIQKUBIAQQgQoCQAhhAhQEgBC
      CBGgJACEECJASQAIIUSAkgAQQogAJQEghBABSgJACCEClASAEEIEKAkAIYQIUBIAQggRoCQA
      hBAiQEkACCFEgJIAEEKIACUBIIQQAUoCQAghApQEgBBCBCgJACGECFASAEIIEaAkAIQQIkBJ
      AAghRICSABBCiAAlASCEEAFKAkAIIQKUBIAQQgQoCQAhhAhQEgBCCBGgJACEECJASQAIIUSA
      kgAQQogAJQEghBABSgJACCEClASAEEIEKAkAIYQIUBIAQggRoCQAhBAiQEkACCFEgJIAEEKI
      ACUBIIQQAUoCQAghApQEgBBCBCgJACGECFASAEIIEaAkAIQQIkBJAAghRICSABBCiAAlASCE
      EAFKAkAIIQKUBIAQQgQoCQAhhAhQEgBCCBGgJACEECJASQAIIUSAkgAQQogAJQEghBABSgJA
      CCEClASAEEIEKAkAIYQIUBIAQggRoCQAhBAiQEkACCFEgJIAEEKIACUBIIQQAUoCQAghApQE
      gBBCBCgJACGECFASAEIIEaAkAIQQIkBJAAghRICSABBCiAAlASCEEAFKAkAIIQKUBIAQQgQo
      CQAhhAhQEgBCCBGgJACEECJASQAIIUSAkgAQQogAJQEghBABSgJACCEClASAEEIEKAkAIYQI
      UPr7/dHj8aAoyrNaFyGEEM/QfQOgpaUFm832rNZFCCHEM6RRpIovhBABSa4BCCFEgJIAEEKI
      APVYAaAoCh6PB7fbPe4F48HBQerr63G73Y+1kn4dHR00NTU9kWX9kKIo+Hy+u7bhfq97PB5c
      Lte4f/e/x+1243a78fl8T2W9nxX/tjgcDnVbvF4vHo/nOa/Zi8Pn8+F0OnG5XC/l4An/b/w0
      jlWv16ueC/cqLx6FzWZjeHj4Cazh83VnWXFnmeF//X77qre3d9wyVlGUBx6L970I/CAej4f9
      +/fT2tpKVFQU77zzDnr9nxd57do19u3bxz//8z+TkJDwOF8FwOHDh2lra+N//I//8djL+qHb
      t2/z7bffMn/+fHJzc9XXh4aG2Lt3L3l5ecyaNQuAgYEBTp06RWNjI06nk/DwcHJzc5k7dy5B
      QUHqZwcGBvj4449RFIW8vDzy8/Of+Ho/C263mwsXLlBdXY3X6yU4OJi3336b69evY7PZWLx4
      8VNfh6amJhITE9FqR+ssXq+XtrY2EhMT0Wg0T/37H6S3t5cjR44wODiIRqMhLy+P2bNnP7F1
      GxoawuVyERUV9USWB6PrrNfrCQ0NBUb36VdffUV+fj7R0dFP7HsAjh07RnNzMzqdDoCEhARW
      r1792MstLi5GURSWLl362Mt6ngYGBti/f796fAOsXLkSq9XKyZMnee211+752W+++YY1a9Yw
      YcKEu/62c+dO3nvvvTHl8p0eKwAGBga4ePEiJpOJ+vp61q1bN+5KvAwGBwe5du0aaWlpY153
      OBwUFxeTmJgIjNY4fve739Hc3MzkyZOxWq10dHRQUlJCXFwcGRkZ6mfLy8upr6/HYrFw6dIl
      Fi5cOCYgXhYXLlygrq6OLVu2YLVauXXrFgCTJ09+KrVFf43lzsJz3759/OpXv1JPkJGREb7+
      +ms+/PDDuwpZRVGeaSi43W4+/fRTFi5cSG5uLk6nc0ytdLzt+UvV1tbS29vLK6+88tjr63f5
      8mViY2PVio1Op2PZsmWEhYWp73kS6w6jrfclS5YQHx8PMKZAut93PMxv+SJUAB6Xv1X02muv
      qfvGYrGgKMpjVRw3bNighu54HisAamtr8Xq9rF27lkOHDnH9+vUHBoCiKAwODjI8PExQUBCR
      kZFjUk9RFIaGhhgeHsZqtRIaGnrPH1hRFJxOJ1qtFqPRCIwW2AMDA3i9XqKiop54gVtfX09j
      YyOvv/46y5YtQ6vVYrfbqaqqUmtSfiUlJcTExJCXl8exY8fo7u5+Ii2hZ0lRFM6ePcuHH35I
      REQEAFOnTgWgq6uLkZERwsLCUBSFy5cvU1xcjEajISQkhE2bNmGxWLhy5QqlpaV4PB4SExNZ
      u3YtBoOB06dPM3PmTC5evMjQ0BDbtm3jypUrlJSUoNFoWLp0KZmZmXzzzTe0t7fz6aefotPp
      WLBgAZcvX6apqYkdO3ZgsVjYuHEjer2eI0eOcPv2bcLCwli3bh3h4eFPfR9VVFQQGxvL/Pnz
      0Wg0BAcHExUVhaIo1NXVcfLkSdxuNxkZGaxcuRKdTkdhYSFer5f6+noGBwdZsmQJc+fOZXBw
      kO+++46enh5CQ0NZvXo1/f39nDx5EpfLRXNzM5MmTWLevHmUlJSQmZnJsWPHmDlzpnqsZ2Zm
      AnD27FlycnIIDw+nra2NU6dOMTw8TGZmJsHBwVy+fBmTyURxcTE5OTnMnTuXqqoq5syZg8Fg
      oLOzk2+//RabzUZCQgJr1qzBYrFw/fp1urq6aGlpoaenh6lTp7J69eoHFsTBwcFjwgWgvb2d
      b7/9FofDwaRJk1i9ejUmkwmHw8HRo0dpbm7GYrGwbt06Jk6cCMDNmzcpKChgZGSEgYGBZ9IC
      fRb8rTGDwaC+Njw8TEVFBfn5+TidTo4fP87NmzcJCgoiPz+f9PR0FEWhpKSElpYWhoaGWL58
      udr6LC4uJiEhAafTSUFBAYqi0NDQgNfrZcuWLY8eAD6fj9LSUrWAKygooLS0lFWrVt3zQOjq
      6mLXrl20tLTg9XrRaDQkJyfz/vvvExYWxsjICHv37qWsrAyPx4NOpyMtLY1f/OIXhISEjFmW
      oiicP3+eQ4cOsWnTJhYvXszhw4e5dOmS2u8VHBzMG2+8wfTp059YLcHf528wGNBqtWg0GqxW
      K3l5eWPeNzAwQGNjIwsWLGDatGn86U9/orq6mvj4+JeqxmKz2QgKChq3IO3p6WFwcJCcnByu
      X7/O5cuXef311zGZTOzYsQOXy4XZbCY4OJht27ZhNBo5cOAAV65cYeHChdTW1lJRUUFSUhIr
      V66ksbGRkpISXn/9dVwuF59//jkTJ05k1apVVFdXs3XrVvR6PSaTicjISPr6+ti+fTtarRar
      1cpXX31FWFgYa9asoby8nO+++46f/vSnYyoYT0NraytZWVl3/a5DQ0McOnSIN998k7CwMPX4
      XLRoEXV1dYSHh7NlyxYcDgeff/45s2bN4syZM8TExLBx40a6u7vxer2kpqaycOFC+vr6WL58
      OXq9HpvNxuXLl7l8+TIrV64kIyODq1evoiiKGgANDQ2kpaVhMpn47LPP2Lx5MxMnTqS9vZ1J
      kybR3t5OTEwMubm5GI1GNbCmTZuG2+3ms88+Y/369SQkJHDu3DmOHDnCli1baGtro7W1lbVr
      12KxWPjoo4/Iz89/YGVLUZQx/dFut5vdu3ezbds24uLiOHXqFCdOnGDdunUcO3YMnU7HL37x
      Czo6Oti9ezf/9E//xMDAAAcPHuSv/uqvmDBhAmfOnHkpr7fcyw/3kcvloq6ujvz8fKqqqujv
      7+edd97B4XDQ398PjHbduVwutm7dis1m48svv2TGjBnodDrKy8vZuHEjbrebsrIyFi5cyM9+
      9jOqqqo4c+bMoweAw+GgqqqKRYsWERISQk5ODqdPn6a/v1+tKf6Q3W7HbDbz6quvEhUVRW1t
      LcePH+fYsWNs27aNq1evcunSJdasWUN2djadnZ1UVlbicrnu2kl1dXXs37+f7Oxsli1bhsfj
      YXBwkKVLl5KcnKx2ERw8eJDJkycTHBz8qJs6RnJyMuHh4Xz++efU1tayYMECUlNTMZlMYwqA
      mpoabDYbM2bMIDY2lokTJ3L9+nX1BH5ZOJ1OjEbjA0Pr6tWrbNmyhZiYGABMJhMAWq2WlJQU
      GhsbGRgYwGQy0dXVBYwWAFOnTiU/Px+NRsO5c+eYPn06Wq0Wk8lEfHw8LS0t5OTkoNfrCQkJ
      UWtHVqtVfU2r1eLxeGhubmbhwoV4PB6Sk5O5du0adrv9if329+LfRz9048YNcnJy1O7D9evX
      s3fvXhYtWoRer2f+/PlERUXhdDoJDg7G6/USGhpKbW0tKSkpxMfHq8eV2WxmZGREbWXabDb6
      +/v5h3/4hwf219fV1ZGZmUlWVhaAugyTyYTZbB5zDcCvra2N6OhoMjMz0Wg0LFmyhF27duF0
      OtFoNMyaNUvtzomJicHlcj0wAHbt2qW+Jzc3l8zMTJKSkpg8eTIA+fn57Nq1C5fLRUNDAx98
      8AEWi4X09HT1WGhra2PGjBmkp6eP2ZYfg6amJv7P//k/aDQadDodr7/+OhaLRf271Wqlq6uL
      pqYmkpOT1XNNr9czb948IiMjMZvNWK1WvF7vXV0/ERERzJ49G7PZTFpaGhUVFY8eANXV1Xg8
      HrU7YOrUqZw6dYqKigqWLFky7mcmTZrEhx9+iMvlwuFwEB0dTUlJCW1tbSiKgt1uR6fTkZCQ
      wKRJk8jKyrrr4o6iKHR0dPD5558TFRXFm2++iUajwWAw8Mtf/hKv14vD4cDtdjNr1iwKCwsZ
      GRl5YoVATEwMH3zwAQcPHqS4uJhLly4RHx/P+vXrycvLQ6PRoCgK169fx2KxkJqail6vJz09
      nQsXLjA0NHTPgHwRhYeH09fXh9PpvO8J7nQ6MZvNd73ucDj49NNPSU5OJj4+ntDQUDXQg4KC
      mDFjhhouDoeDK1euUFdXB4y2Mu88Ae7H7XYzPDzMkSNH1ICNjo5+Jq2t2NhYWlpamD59+pjX
      f7hPzGYzTqfzvstavHgxYWFhXLhwgZ6eHlavXs2UKVPGfW9aWtpDXawdGRnBarU+xJb8mdvt
      HvN7GwwGdUTco3r33XdJSkpS/7+yslKtKAAYjUa8Xi8+nw+32z0mVP37bnBwkLi4uEdehxfZ
      pEmTePfdd8d0AfX29qr/PXnyZDZs2EBpaSnHjx8nLy/vnmXtw3rkACgpKUGv19Pd3c3ly5dx
      OBxoNBrKyspYvHjxuCfeyMgIJ0+epKysDJvNhs/nY2BgQO0XzM3NpbCwkJ07dxIXF0d6ejoL
      Fy4kJSVFXUZPTw8fffQRIyMj/OpXv1JrAP4uqTNnztDT06MOWfR6vX9RE/Fh3puens4//uM/
      0tTURHFxMUVFRezYsYPQ0FCysrIYGhqioaGBiIgItU9co9HgdDqprq5m4cKFD70+z5tOpyM9
      PZ3CwkJ+8pOfoNPpGBoauitQU1NTOXPmDGvWrMFms9HX1weMXlz3+XysW7cOGG0F+lsAPxQf
      H4/ZbGb9+vVotVpsNpt6HBkMBmw2m9oVpdfrGRkZUX8vk8lEREQE+fn5JCcnA9Df3/9MLrrn
      5uby7//+7+Tl5REbG4vP58Nut5OQkMDRo0dZunQper2eyspKtTVwL8PDw0ybNo3p06dTW1tL
      UVERU6ZMUbf/fvz7DEYL8JGREQCSkpIoKipi2bJlBAUF4XK5MBgM911mVFQUra2tOBwOzGYz
      LS0tGI3GcVs6jyouLo6jR4/icrkwGo3cvHmTkJAQjEYjERERNDY2kpGRgdPp5ObNm6xcuZLh
      4WHq6urUioPD4RgTIj9mdrudlJQUMjIyGBoa4j/+4z+eTwA4nU6qqqpwOp3s3bt3zN9u3rzJ
      4ODgXRd7AE6cOMGRI0dYt26d2u/4+9//Xv37xIkT+ad/+icqKyupqanhypUrFBcX8/d///fq
      SW00GklMTKSyspKWlhbS0tLQaDS0tLTw6aefkp6ezk9/+lPCw8MpKiri2LFjD7VNQUFB6HS6
      u8YU+0+QH9ZuDQYDkydPJi0tTS0AysrKyMrKoqmpid7eXnw+Hx9//PGYz5WWlr5UAQCjIwn2
      7dvHb3/7WywWC/39/fz6178eE/LLli3j8OHD7NixA6vVqtZ0Q0JCcLlc7Nq1C4/Hg81mU3/L
      H5oxYwZ79+7l448/xmz+/+3deWyT9/0H8LevHE6CE5OQgyQEKEdDuK8W+AGlAxaxtuqmdj22
      oW4apVWRJk3bf5Oq7b9JnaaplF6otOs1CgUKBAJ0QIGchJBALieOk5DLjA+nBQAAIABJREFU
      iR3HsePbz/f3R+ZHmAQKDEPZ835JlYrz2H6ex8nz9vM9Pt9EjIyM4JlnnoFer8fixYvx3nvv
      IT8/H2vWrEFubi4yMzOxa9cuZGdnY9OmTdi4cSP27duH7Oxs+a7v2WefjXmTW2pqKp566il8
      /PHHMBqN8Pl8mDt3LtavX4+0tDTs3r0bBoMBvb292Lp1KwDIXwoiIv9/8eJFtLa2Ij09Hd3d
      3Vi7di2AsYA9fPgwnE4n8vLyMH/+/HH7kZubiz179mBgYABOpxM9PT0Axi60M2bMwPvvv4/U
      1FSoVCq8+OKLmD17Nj755BN0dHRg1qxZ8h1s5JgWLVqE999/H1OnTkVXVxd+8pOfyN9Ob/yC
      dzcjdYxGIwoLC/Hee+8hKysL165dw7PPPguNRoMNGzbgwIEDyMvLQ39/P+bPn4/U1FTMnTsX
      Fy9exEcffQStVouenh75HD3sJjpH1z/W3t6Oc+fOITMzE1arFQsXLrzlc298fMLPTNyFq1ev
      itdee02cOnVK2O12+b9///vfYvv27aKmpkYIIcTp06fF66+/Lrq7u4UQQvztb38Tb775pggG
      g0KSJBEIBMRf/vIX8dZbb4lwOCzsdrv8s3A4LNrb28W2bdvE2bNnhRBC7Nq1S/zpT38SXq9X
      7Ny5U+zYsUM0NjYKIYQoKysT27ZtE2azWUiSJCRJEsePHxevv/66sFqtQgghfD6fsFqtwufz
      jTum4eFh8Yc//EH8+c9/FoFAQH6N/fv3i+3bt4urV68KIYRoamoSFotFhMNheZv29naxY8cO
      ceDAASFJkvj888/Fjh07RGdnZ9T5+cc//iF27Ngh/H7/3Zz2ByoQCAiHwyF6e3uFx+MRkiSJ
      YDAoH4skSSIUCgmfzyd8Pp946623hMvlEpIkidHRUWGxWITD4RB+v18+/16vV4TD4XHvY7PZ
      RF9fn/B6vUKSJCGEEOFwWAwMDIju7m4RDAblbXt6eoTVapU/D4/HI3p6esTQ0JAIBAL37fxE
      3ru/v1/YbDb59zgUCon+/n5hsVjk83bjsUeeG9nebreL9vZ2MTQ0FLWN2+0WXV1dYmRkRITD
      YeH1esftg81mE2azWYyMjAiPxyM/PxwOC4fDIXp6euT3kiRJOJ1O0dnZKUZHR4UkSVH7Ffmb
      bGtrkz9LIYTw+/3yZyCEiDqum/F6vSIUCo17PBwOi8HBQWE2m4Xb7ZZfJ3K8ZrNZDA4ORv2e
      +P1+0dXVJXp7e4XX672vn3OsRD7PG8/j9Y+Hw2HhdDqFxWIRVqtVPp83+10SQojR0VH58Rv/
      nrxer7irr0b19fVQqVRYunRp1OiQpUuXYt++faivr5fHFl8vIyMDLS0tOHDgABITE1FXV4fu
      7m551MLJkyfR0tKCxYsXIzk5GY2NjdBqtePa/BISEvCLX/wCb7/9Nj788EP88Y9/lIeTHjx4
      EAsXLkRbWxuuXLkiP0cIgdLSUhw9ehSvvvoqlixZEvWaBoMBK1euxMmTJ/HXv/4Vjz76KAYG
      BlBXV4eCggK5A62rqwtff/01CgoK5CGd9fX1UKvVWL58OTweD1paWjBz5kzk5OREfftcvHgx
      Ghoa0NTUFJXeDwOdTofU1NSoz/v6YysrK4PJZEJGRgb6+/uRn5+PxMREqFQq6PX6qGa8iIlu
      3XU63YSTndRqtdzpdf22kY7IiMTExAn7ImIt0lF743trNJoJ26yvP/bIcyPbG41GGI3Gca+f
      lJQU1ZZ/4/lTqVSYPHnyTc/fjZ8fMNaJen1H6vWvqVarJ9yXG5uBbud836yZRq1WIz09fVxf
      RuR4b5yXE3n/6/sS/hdEBj7c6nGVSjXu8wJu/rsEQO5DU6lU4z7bhIQEaN58880372RHJUlC
      ZWUlsrOzsWrVqqifabVaDA4OIhgMYv78+RgeHobdbseyZcuQlJSErKws9Pb2wmQyYXBwECtW
      rEBiYiKMRiPmz5+PpKQkDAwMoLm5GSaTCaFQCD/+8Y+xZMkSqNVqdHZ2QqvVYtmyZYiPj8eM
      GTNgsVgwMDCA1atXIxQKwWw2o729HZMnT8aSJUvg9/uxfPly6HQ6fPHFF0hPT0dxcfGEbcPT
      p0+Xm5M6OjowOjqKwsJCvPTSS3Kbd1paGhISEmC1WtHf34/h4WFMnToVL774IqZNm4bh4WHU
      19dj5cqVmD59+rgPqqurCykpKfLIh/8VeXl5yM7ORnJyMubNm4dly5bdcgIKET14970cdDAY
      hMvluuk3NSEEvF4v/H4/9Hr9HXXiSZIEt9sNIcS4CWQtLS1455138Prrr8vf5icihIDP58Po
      6CgSEhKg1+snHEcuSRK8Xq+cpA/T2H4iIkBB6wGUlpYiHA6juLiYF2siIigoAEKhkDzBgoiI
      FLQegFar5cWfFEuSpIe+JLkS9PT0yBMh7wfFBADdvYaGBlRVVaG6uhoNDQ1yDZJbEf+pY349
      SZKiyg38r3C73aiurobdbo96PBgMorq6Gr29vbd8vvjP2hJ3QwiB5ubmqBmjE+nq6kJlZeVd
      vcd/y+l0oqOjQ560FwgEUFdXh5GREXkbu92Ovr6+B7J/PxQejwf79++XR2oJIeB0OlFVVRWz
      ekcMAPpex48fx/DwMNxuN0wmEz788EPYbLZbPsfr9eLgwYNRj1ksFpSVlcVyVx8Iq9WKQ4cO
      4fTp01GPm0wmHDhwADU1Nbd8fiAQwL59++76j3xoaGhcvawbjY6Ofu9nFisul0vugwPGikJ+
      /vnnqK2tlbcpKyuTJ64pVUVFBebMmYPJkycjGAzi7Nmz2LNnD/bv3x+zAHh4qpLRA6PVavH4
      44/LFVlLSkpgMpmQmpoKu92OjIwMqNVquVaLwWCAxWKBxWJBW1sbtFotUlNT0d7ejr6+PmRn
      ZyMxMRFTp07F0NAQurq6EB8fLxfVexjNnj0bPT09UTWTLl++HFUlNhQKyTPl09PT5cVsIiXG
      zWazXCFXrVajo6MDg4ODmDZtGjIzM6FSqWCz2ZCcnIxgMIje3l7MmTNHLu8MjN11dHR0wO12
      IyMjA1OnTp1wvYSuri7Y7XZMnjwZeXl5Ma2YOmXKFLhcLvj9fmi1WlgsFixZsgTd3d1y05TV
      asWyZcsQDAYxNDSEjIwMdHV1yePeOzs74XQ6o/Y3Uvp9eHgYLpcLM2bMQFpaGoQQGBwcRDgc
      Rnd3NzIyMlBQUCCfB6fTCZPJhKSkJMyaNQs6nU6+G4mLi5OLrWk0GphMJgQCAeTm5mLy5Mkx
      G0ASCARw9epVvPzyy1CpVHKg/+pXv8J7770Xk/cEeAdAtynSfGO329Ha2opp06bB4/Hg2LFj
      cvPF4OAgvv32W/j9frS3t8PtdqO5uRlmsxlDQ0O4du0aBgcH0dzcjK6uLlitVuzevRu9vb1o
      bm6+7bIdP0SREiXt7e0Axv6ge3t7o+aCnD17FpcuXYLD4cDhw4dx/vx5SJIEk8mE0dFRNDc3
      o6WlBeFwGKdPn8aZM2cQDAbx5ZdfwmKxyK9RUVGBd955Bw0NDQCAM2fOyM1M3377Lerq6jA0
      NIT9+/dP2HxQVlaGw4cPw26348yZMzCZTDE/N5mZmejp6YEkSejq6sKKFSvgcDgQCATg9Xrh
      9XqRnp4Oh8OBkpIS/Otf/8KRI0fgdDpx/vx5XLx4EQ6HA0ePHsWZM2cghEBfXx/+/ve/o6Gh
      ATabDbt27YLNZoPf78cnn3yCkpISuN1uHDlyRK6FPzAwgN27d8Pr9aKhoQEHDhyAJEm4evUq
      ysrK8O6776KqqkouX3L58mUMDAzgm2++gdPpjNk5stlsSExMlEvo6PV6rFu3LuaFI3kHQN/L
      5/Nh9+7dCIVCcDgc2Lx5M7Kzs+FyuaI6FoUQCIfDSElJwfr16+X6MREejwcWi0V+rKmpCVlZ
      WXjiiSce+rkUKpUKixYtQnV1NebOnYvGxkbMmzdv3BJ/gUAAgUAAOTk5uHDhAlavXo3Nmzej
      s7MTW7ZsgUqlgiRJqKqqwu9//3vExcXJ286YMQPBYBCVlZX49a9/Lc+Mvn5N6s2bNyMQCCAY
      DCIjIwOXLl3C8uXLo/a1u7sbjz/+OBYsWBBVeTKWZs+ejdbWVuTm5sLlciEnJwdpaWkYHByU
      KwNH9qWpqQmbNm3CCy+8AJVKhenTp8vnLS8vD6dPn8a6desghMCSJUvw05/+FMBYbaHy8nJs
      3LgRRqMRL7zwApKSkrB8+XK8//77WL16Nc6fP48f/ehHWLBgAYLBID766CPY7XZIkoRz587h
      lVdekUtN9/X14bXXXoPBYIj5AJLIAliR2fX362+BAUDfKyEhAb/85S+RmJgof0MzGo03Lep2
      uwoKClBfX489e/YgPT0dq1evHlfa4WGSk5Mjr2ZXW1uL4uJiWK1W+ecNDQ0oLy9HXFycfJGe
      qG3X5XLB5XLh8OHDAMbuJlwuF4CxKfxPPfXUuLIYEXV1dbh48SLi4uLkCr03ihTuq62tRX5+
      PlavXn3H5aLv1PTp01FTU4OhoSEkJycjPj4es2bNQmtrKwKBQNRSqgUFBXjyySflfW9qakJZ
      WRl0Op183iYa0ZSTk4OWlpZxjyckJCAlJQVerxcDAwPweDxobW0FMNYc5PP5AABPPPGEfPEH
      gOLiYnz66aeYNGkSioqKsGjRopgVFryd9RRigQFAt0Wn08mzt5cuXSo3A92scyryTfbGx67f
      PjExEc8//zxcLhfa2tpw8OBB/OY3v3ko100Gxi40kYV/AoEAMjIy5AAIh8MoKSnBK6+8gvT0
      dNhsNhw5ciTq+eI/699GzvP1ZdWvr8J5s36ScDiM48eP49VXX0VaWhqsVitKS0vHbZednY1t
      27bBbrejoqICZ86cwZYtW+7lqRgnPT0dIyMjaGxslC/206dPx6FDhwAgqnaYXq+Xj1uSJBw7
      dgwvvfQSsrKy4HA4xg0uiOjv75+wycTn88Hj8UCv1yMpKQlz586VawmtWbMGRqMRnZ2d4yoT
      LF68GPPmzcPAwACOHDmC1NTUqIC4l5KSkjA6Onrf17NmHwB9r3A4jNbWVjQ2NqKiogKlpaWY
      O3cudDodXC4XTCYTTCZT1MUmUs65oaEBPT09CAaDMBqNMJlMaG9vl9v9v/vuO3g8Hnl5zYe9
      GaioqAilpaWYPXt2VPNPpGPParXCYrHg2LFjculxjUYDjUaDmpoadHZ2Qq1WY+rUqbh06RKC
      wSD6+/tRXl5+W+/v9/thtVphNptRUlIirwlwvVOnTqGpqQmSJEGtVsd8yUxg7M4lPz8fFRUV
      cmHA9PR0DA0Nwel03vSOBhjr2LZarejo6EBJSYl8NwSMtZ13d3ejvr4ep06dwooVKwCMXfS7
      urrQ2dmJr776CkVFRdBqtViyZAkuXLgAt9sNj8eD8vLyCdv2A4EADh48KA9NValUMT1PBoNB
      7igHIN+ltLa2wuv1orW1FRaLZdzQ6v/WHReDI+UJBoOw2WwYHh6GEEJejFqn08FgMMgddIsW
      LcKUKVOQmZkJtVqN3Nxc1NTUYHh4GAUFBUhNTUVcXBwuX74MSZLw6KOPoru7G3V1dXA6ndi0
      aRMMBsNDGQKJiYmYMmUKkpKS5Eq5kW/qycnJyMjIQH5+PiorKzE0NIT58+cjOzsb2dnZ0Gg0
      yMnJQX19Pfr7+zFr1iwUFRWhv78fTU1NCAaDWLFihVzZccqUKeO+rWZkZECv1yM3NxcVFRVw
      Op1YtGgRMjMz5cXUk5KSkJ6eLi/s3tjYCIPBgHXr1t2XvoCUlBTo9XrMnz9fDvuEhISoyrpC
      COh0OnmfVSoV8vPzUV1dDZvNFnXenE4namtr5Saz4uJiZGVlIRQKobq6Gm63G729vSgsLMRj
      jz0mVx5NS0uLOtf5+flQqVQwGAxyJ2zkYn/p0iWYzWYsXLgQc+fOjVkIJCQkyGusp6amYmRk
      BPX19bDb7cjKypJHOk2dOvWeflaKKQVBRP9b2tvbUVNTg+eeey7qca/Xi88//1zuBH5YtLW1
      4cyZM3jllVfuW9UCNgER0UMpKSlpwkEDGo1GHsf/MJk5cybS0tIm7MiOFd4BEBH9QESGu964
      5nasMACIiBSKTUBEdF9Eit7xO+eDEw6Ho84/A4CI7gur1Yp//vOfMasI6/P5MDg4GJPXfhgN
      DAzIw0qBsQDeu3dvVBVWBgARxVw4HMaBAwewYcOGmM2m7enpwZkzZ2Ly2g+jY8eORZUJHxoa
      gt/vjxoZxQAgophrb29HfHw88vPzH/SuKFZjYyPmzJkTNTqKpSCIKOZqa2uxdOlSeZKf2+3G
      8ePH0dvbC6PRiGeeeQbDw8M4ceIERkdHkZiYiOLiYuTm5qKtrQ1tbW3o6+uDzWZDfn4+nn32
      WcTFxcnlLoaHhxEMBpGXl4fR0VF8++232LhxIxITEyFJEk6fPo2ioiJkZmY+4DMxXjgcxokT
      J7Bs2TJ5RnRtba1cCLCkpAR2ux1arRZr165FUVERHA4H6urqUFBQgBMnTmDt2rWYM2cOqqur
      UV1dDSEEent7sWnTJgBjpcjNZjOefvppSJKEr776ChqNhncARBRbQgh0d3fLpbHD4TD279+P
      zMxMvPrqq3jiiSegUqmg1WqxZcsWbN++HWvWrMHXX38NSZLgcDhgNptRXFyMN954AwMDA3LZ
      588++wxLlizB9u3bsXHjRgCQixZGCr55PB5cvnxZnuX7Q6NWq6HX61FWViZ3lFdVVSE1NRVC
      CKxZswbbt2/HM888gxMnTsDlcsHn86G8vByHDh2SZ+Y3NzejsrISL7/8Mn77299GFWu0Wq2I
      j4+XX7O5uRmLFy/mHQARxVak0zdSwsDpdMLv92PlypWIi4uTy0DEx8fDYrHAZDLB4/EgFArJ
      C6MUFhYiKysLwFgpjEAggL6+PkyZMgVFRUUAIJfhUKvVWLVqFb777jsUFhaioaEBs2fP/sEu
      NqRSqbBw4ULs2bMHo6OjGB0dRSgUksthuN1uVFVVwe/3IxQKydVL/X4/XnvtNXkJyerqajz9
      9NPyvyPHK4TAlStX5PLkkiQhJSUFjzzyCO8AiCi2IhedyPDDcDgMtVod1RYthMDJkydRXV2N
      tLQ0ZGdnIy4u7pav63K5bvqtvqCgAD6fDwMDA7h8+TKWLl167w4oBgwGA/Ly8tDY2Cg3l6nV
      aly6dAklJSVITk7G1KlTo2pAzZw5U77YA2NBcf2/I/x+P3p6ejBjxoxxP2MAEFFMqdVqJCQk
      yNVPU1JSEAgE0N/fD2CsfToYDMJsNmPTpk1yW/33zRfIyMiAxWKR7xKur3yq0+mwbNkynDx5
      EsFgUP42HQwG5aKGPyQqlQqPPfYYqqqq0NDQgPnz5wMAWlpasH79eixatEguYX0zmZmZaGpq
      AjAWspE7hZ6eHqSmpk44u5hNQEQUc3PnzkVDQwOmTJmC+Ph4bNiwAV988QWMRiM8Hg+ef/55
      zJw5E5988gmMRiO8Xu9NF7qPdCRnZGQgJycHO3fuhMFgwNDQUNQoowULFuDo0aMoLi6Wn3Pp
      0iU0NTVh69atsT/oO5STkwOdTofU1FR5qOajjz6K/fv3y53bkRCdyPr16/HBBx+gsbERfr8f
      3d3dAMYWCVq4cGHUtpHzwVIQRBRzNpsNH3/8MX73u99Bo9HInZ1Op1NeIUwIAbvdDo1GA4PB
      ACGEvG3k/4GxO4bIOgaSJMkjgIxGY1TTks/nw9tvv4033ngDCQkJCIfDeP/997Flyxbk5eX9
      4MqOS5KEPXv2YMOGDfKaCUIIjIyMwO/3w2g0AoB8fOFwOGpOhRBCLt2ekpKChIQESJKEd999
      F2+88Yb8vMi51+l0DAAiuj+OHDmClJQUrF27NuYX39bWVpw+fRpz5syR38/tdsNsNmPBggU/
      uIu/zWbDyZMnIUkSXnzxxXu27kBtbS0GBwfl4aA3YgAQ0X0RCARw7tw5rFu3LmazgSMGBwcx
      OjqKvLy8h6IsdGTxmvz8/Hs6Wqm2thYFBQUTLpUJMACIiBSLo4CIiBSKAUBEpFAMACJ6IMLh
      MCRJetC7cUeEEKisrIwqqfwwYwAQ0QNx7tw5eTLY9cLhMC5cuHBfwiEyJPJOJCQk4MiRI/d8
      XQMhBAYHB1FWVnbHz6usrIyaCHe7GABE9EDYbDZ5tur1hBC3nPB0L/X396O0tPS2ZwarVCoU
      FhbC5/Oho6Pjnu2Hz+fD0aNH8dlnn6G0tPSOn+92u+9qdrPmzTfffPOOn0VEdId6enpgMpnk
      YmRNTU3IyMiA1WpFa2sr9Ho99Ho9AMiVK4PBIKxWKwYHB9HQ0ACVSoVJkyZBpVIhEAjg6tWr
      6O7uhk6ng16vv+n4fiEErl27hvr6eoRCIaSlpcHv9+PKlSswmUyYNGkSnE6nPNnKarWiubkZ
      gUAABoMh6nU1Gg1UKhWuXr2KwsLCezKnwO12w+PxoLi4GBcvXsT//d//jdtmZGQEw8PDaGtr
      Q0dHByZNmoT4+HioVCrExcXBYDBArVYjFAqhubkZLS0tSEhIiFoApr+/H83NzQgGg2Pb/9d7
      TkR0C5FCbwcPHoTL5cL58+fhcDgAAHv37oXZbMbQ0BA+/fRT+Hw+hMNhfPXVVwDGLoy7du1C
      VVUVJEnC3r17cfnyZQgh8MEHH6CtrQ0jIyM4cuQIRkdHb/r+Fy9eRElJCRISEnDq1ClUVlbC
      7/ejt7cXLpcLHR0duHbtGoQQKC8vx5dffomRkRFUVFTAarWOe81p06bBbrdPeAdzNwwGA1au
      XBl1sb5Ra2srdu7cif7+frhcLrz99tsYHh4GABw6dEg+d4cOHcKVK1eg0+nw8ccfo7e3F0II
      XLhwAXv37oXL5UJ5eTkGBgZYC4iIYsvpdKKpqQnbtm0bN8np5z//OWbNmoVQKITdu3fD7/dD
      r9fLzRlCCBQUFOC5556DRqNBQUEBTp48iQULFmB4eBjPPfccJk+efMvJXqFQCDU1NXj++edh
      NBoxb9487Ny5E4899hhWrVqFcDiMzZs3Q6VSYXR0FJcuXcLWrVsnrKwZEdnHQCAQVaHzbt3O
      XYQQAuvWrcOTTz4pP6eurg7r1q2Tz5fL5UJfXx+2b98OrVaLlJQUXLhwAcXFxbh8+TK2bt0q
      V1AVQjAAiCi2Ik0r8fHx434WuXBHavtM5PqLY+TiFQqFUFxcjH379iE+Ph5FRUVYtmzZhEEQ
      DodhtVpx4sQJ+bXC4fCEnbherxdxcXGYNGnSLY8pUqMoVgvc346srCxYLJaox0ZGRjA4OIj9
      +/cDgLwovMfjQXx8PFJSUuRtA4EAA4CIYkuv18uLnEQWhblbDocDGo0GOp0OixcvRlFREWw2
      Gw4cOIDMzEy5iNr1VCoVUlNTsWrVKrmJJRI4KpUqqvM0Li5OXnQl0h8xEb/fD7Va/b1rFsRS
      T0+P3GcRodfrkZqaiieffFIOu7i4OEiShGAwCL/fL9+xaLVa9gEQUWxNnjwZer0eJSUl6Ojo
      QFlZ2R2No3c6nejo6EBjYyMOHjyIpUuXIhgM4ssvv0R3dzf8fj/C4TB0Oh0kSUJpaalcChkY
      uwDOmjULZ8+excjICPr6+nD06FGoVCqkpKTAarXi6tWrsFgsSE5ORk5ODg4dOgSLxYLy8nLY
      7XZ0dHTg+PHj8tDU4eFhaDSae1a3J9JM1tTUBK/Xi6amJpjN5nFDVHt7e9HZ2YmKigrU1tZi
      wYIFUT83GAzQ6/WoqamB2+2GyWTChQsXkJKSgszMTHzzzTfycTmdTo4CIqLYUqlUmDdvHhwO
      B5qbmzFp0iTk5+dDp9MhIyNDvohqtVpkZWVBq9XKS0V6vV7U1NTA7/fD4XDIi59rNBrExcWh
      rq4OXV1dePzxxzF9+nQMDw/jm2++wdq1a+UmJ5VKhenTp0OSJDQ2NsLj8WDNmjVyGer09HRc
      uXIFXq8XjzzyCGbNmoVAIIDGxkbEx8djxowZCIfDUcs0nj9/Hrm5uRPecdwNh8MBk8kEp9OJ
      vLw8uQR0Tk6O3KzV29sLs9kMp9MJSZLws5/9TG6q0mq1yM7Ohk6nQ2FhoTyyKi4uDqtWrUJ8
      fDxmz54Nn8+HxsZGJCQkYMaMGSwGR0Q/XENDQzh48CC2bt16W1U9y8vLodfrxy2Aci85HA58
      9tln2Lp1a1SbeqxdvHgRTqdT7gS+F9gHQEQ/WHFxcWPfVG9zrP2iRYtiuvi7EAJlZWVYs2bN
      fb34A4DRaLwnI46uxzsAIqLbJISAy+VCcnLyPVu05UFiABARKdTDH2FERHRXGABERArFACAi
      UigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiI
      FIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIi
      hWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhI
      oRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJS
      KAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjEAiIgU
      igFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKF
      YgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEih
      GABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIo
      BgARkUIxAIiIFIoBQESkUAwAIiKFYgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSK
      AUBEpFAMACIihWIAEBEpFAOAiEihGABERArFACAiUigGABGRQjELTObZAAAAt0lEQVQAiIgU
      igFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIoBgARkUIxAIiIFIoBQESkUAwAIiKF
      YgAQESkUA4CISKEYAERECsUAICJSKAYAEZFCMQCIiBSKAUBEpFAMACIihWIAEBEpFAOAiEih
      GABERArFACAiUigGABGRQjEAiIgUigFARKRQDAAiIoViABARKRQDgIhIoRgAREQKxQAgIlIo
      BgARkUIxAIiIFOr/AW+DQWKknDcAAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
